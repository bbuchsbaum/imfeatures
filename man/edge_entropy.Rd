% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entropy.R
\name{edge_entropy}
\alias{edge_entropy}
\title{Calculate Edge Entropy Features from Images}
\usage{
edge_entropy(
  image,
  max_pixels = 300 * 400,
  maxdiag = 500,
  gabor_bins = 24,
  filter_length = 31,
  circ_bins = 48,
  ranges = list(c(20, 80), c(80, 160), c(160, 240)),
  use_cpp = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{image}{Either a file path to an image (character string) or a numeric matrix
representing a grayscale image. If a file path is provided, the image will
be loaded and converted to grayscale.}

\item{max_pixels}{Integer. The maximum number of pixels allowed in the processed image.
Larger images will be resized. Only used when \code{image} is a file path.
Set to NULL to disable resizing. Defaults to 300*400.}

\item{maxdiag}{Integer. Maximum diagonal distance for pairwise entropy calculations.
Defaults to 500.}

\item{gabor_bins}{Integer. Number of orientation bins for Gabor filter bank.
Defaults to 24.}

\item{filter_length}{Integer. Size of the Gabor filters (must be odd). 
Defaults to 31.}

\item{circ_bins}{Integer. Number of circular bins for directional statistics.
Defaults to 48.}

\item{ranges}{List of integer vectors. Each vector should contain two elements
specifying the start and end indices for grouping pairwise entropy at
different distance ranges. Defaults to list(c(20,80), c(80,160), c(160,240)).}

\item{use_cpp}{Logical. Whether to use the C++ implementation (generally faster).
Defaults to TRUE. If FALSE, uses the pure R implementation.}

\item{verbose}{Logical. If TRUE, print detailed progress messages.}
}
\value{
A data frame with the following columns:
  \item{im}{Image identifier (file path or "matrix" for matrix input)}
  \item{entropy}{First-order entropy value}
  \item{pentropy_20_80}{Pairwise entropy for distance range 20-80}
  \item{pentropy_80_160}{Pairwise entropy for distance range 80-160}
  \item{pentropy_160_240}{Pairwise entropy for distance range 160-240}
  \item{complex_before}{Image complexity measure before thresholding}
}
\description{
This function calculates first-order and pairwise edge entropy features from an image,
which can be used for analyzing texture and structural complexity in images.
}
\details{
Edge entropy measures quantify the distribution and organization of oriented edges
in images. The method applies a bank of Gabor filters at different orientations
and measures both first-order entropy (distribution of dominant orientations) and
pairwise entropy (how orientation relationships vary with distance and direction).

The C++ implementation is substantially faster for larger images but requires the same inputs.
It automatically converts the ranges list to the required format for the C++ function.
}
\examples{
\donttest{
# Using a file path


# Using a matrix
img_matrix <- matrix(runif(100*100), nrow=100)
result <- edge_entropy(img_matrix)
}

}
